<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>zebedee-cms</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <parent>
        <groupId>com.github.onsdigital</groupId>
        <artifactId>zebedee</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <repositories>
        <!-- Adding maven central repo explicitly to perent jitpack.io resolve artifacts that are already on Github. Otherwise handlebars-java fails -->
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <!--Jitpack io allows us include projects and libraries available on github but not built and published to maven central-->
        <!-- It is used for including internal project modules. See more on https://jitpack.io/-->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Logging -->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-upload-service-client-java</artifactId>
        </dependency>

        <!--Restolino-->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>restolino</artifactId>
        </dependency>

        <!-- Zebedee Reader-->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>zebedee-reader</artifactId>
        </dependency>


        <!-- File upload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>encrypted-file-upload</artifactId>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>resource-utils</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
        </dependency>

        <!-- CSV generator (currently in Zebedee but should end up in Brian) -->
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
        </dependency>


        <!-- Http -->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>httpino</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>

        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <!--SVG conversion-->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
        </dependency>
        <!--
        batik-transcoder is missing declaring one of its own dependencies which results in the error:
        'Could not write PNG file because no WriteAdapter is availble'. As such we need to explicitly
        declare the following dependency on batik-codec desipite it not appearing as a dependency of zebedee
        directly. See https://stackoverflow.com/questions/45239099/apache-batik-no-writeadapter-is-available.
        -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-image-api-client-java</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-slack-client-java</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-jwt-verifier-java</artifactId>
        </dependency>

        <!-- Kafka -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
        </dependency>

        <!-- Encryption -->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-cryptolite-java</artifactId>
        </dependency>

        <!-- Authorisation -->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-authorisation-java</artifactId>
            <version>2.6.0</version>
        </dependency>

        <!-- Threads -->
        <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Spreadsheet generator -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
        </dependency>

        <!-- API Clients -->
        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-dataset-api-java-client</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital</groupId>
            <artifactId>dp-static-files-api-client-java</artifactId>
            <version>1.1.5</version>
        </dependency>

        <dependency>
            <groupId>software.amazon.opentelemetry</groupId>
            <artifactId>aws-opentelemetry-agent</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.onsdigital.dis-redirect-api</groupId>
            <artifactId>dis-redirect-api-sdk-java</artifactId>
            <version>v0.3.4</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <plugins>
            <!-- A folder of dependencies is used in development when reloading classes: -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <!-- Default output folder is ${project.build.directory}/dependency -->
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>1.11.3</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

</project>
